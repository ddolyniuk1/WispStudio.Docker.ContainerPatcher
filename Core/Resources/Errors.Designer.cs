//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WispStudios.Docker.ContainerPatcher.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WispStudios.Docker.ContainerPatcher.Core.Resources.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Container &apos;{0}&apos; not found..
        /// </summary>
        public static string ContainerPatchAgent_ExecuteAsync_ContainerNotFoundError {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ExecuteAsync_ContainerNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Docker API error: {0} (Status code: {1}).
        /// </summary>
        public static string ContainerPatchAgent_ExecuteAsync_DockerApiException {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ExecuteAsync_DockerApiException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error connecting to Docker: {0}.
        /// </summary>
        public static string ContainerPatchAgent_ExecuteAsync_GeneralException {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ExecuteAsync_GeneralException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The host &apos;{0}&apos; is not a valid URI.
        /// </summary>
        public static string ContainerPatchAgent_ExecuteAsync_HostIsNotValidURIError {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ExecuteAsync_HostIsNotValidURIError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to Docker at {0}: {1}.
        /// </summary>
        public static string ContainerPatchAgent_ExecuteAsync_HttpRequestException {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ExecuteAsync_HttpRequestException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Either --replace-tag or --restore-tag must be specified..
        /// </summary>
        public static string ContainerPatchAgent_ExecuteAsync_ReplaceTagOrRestoreTagUnspecifiedError {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ExecuteAsync_ReplaceTagOrRestoreTagUnspecifiedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: Path not found: {0}.
        /// </summary>
        public static string ContainerPatchAgent_ParseInputPaths_WarningPathNotFound {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ParseInputPaths_WarningPathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: --input and --output are required in replace mode.
        /// </summary>
        public static string ContainerPatchAgent_ReplaceMode_InputOutputRequiredError {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ReplaceMode_InputOutputRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: No valid input paths found..
        /// </summary>
        public static string ContainerPatchAgent_ReplaceMode_NoValidInputPathsFoundError {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_ReplaceMode_NoValidInputPathsFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Backup image {0}:{1} not found..
        /// </summary>
        public static string ContainerPatchAgent_RestoreMode_BackupImageNotFoundError {
            get {
                return ResourceManager.GetString("ContainerPatchAgent_RestoreMode_BackupImageNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one input path must be provided for profile &apos;{0}&apos;..
        /// </summary>
        public static string InputNullOrEmpty {
            get {
                return ResourceManager.GetString("InputNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output path must be provided for profile &apos;{0}&apos;..
        /// </summary>
        public static string OutputNullOrEmpty {
            get {
                return ResourceManager.GetString("OutputNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The load profiles are null, something went wrong..
        /// </summary>
        public static string ProfileManager_ParseLoadProfilesAsync_LoadProfilesWasNullError {
            get {
                return ResourceManager.GetString("ProfileManager_ParseLoadProfilesAsync_LoadProfilesWasNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The profiles directory &apos;{0}&apos; was not found or was removed during operation..
        /// </summary>
        public static string ProfileManager_PrintProfilesList_DirectoryNotFoundError {
            get {
                return ResourceManager.GetString("ProfileManager_PrintProfilesList_DirectoryNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to list profiles. {0}.
        /// </summary>
        public static string ProfileManager_PrintProfilesList_GeneralError {
            get {
                return ResourceManager.GetString("ProfileManager_PrintProfilesList_GeneralError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Problem accessing profiles directory. {0}.
        /// </summary>
        public static string ProfileManager_PrintProfilesList_IOException {
            get {
                return ResourceManager.GetString("ProfileManager_PrintProfilesList_IOException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No profiles found..
        /// </summary>
        public static string ProfileManager_PrintProfilesList_NoProfilesFoundError {
            get {
                return ResourceManager.GetString("ProfileManager_PrintProfilesList_NoProfilesFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The profiles directory path is too long for your operating system..
        /// </summary>
        public static string ProfileManager_PrintProfilesList_PathTooLongError {
            get {
                return ResourceManager.GetString("ProfileManager_PrintProfilesList_PathTooLongError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profiles directory failed to initialize and execution cannot continue..
        /// </summary>
        public static string ProfileManager_PrintProfilesList_ProfileDirectoryIsNullError {
            get {
                return ResourceManager.GetString("ProfileManager_PrintProfilesList_ProfileDirectoryIsNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: You don&apos;t have permission to access the profiles directory. Try running as administrator..
        /// </summary>
        public static string ProfileManager_PrintProfilesList_UnauthorizedAccessExceptionError {
            get {
                return ResourceManager.GetString("ProfileManager_PrintProfilesList_UnauthorizedAccessExceptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: You don&apos;t have permission to read the profile file. Try running as administrator..
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_Error_UnauthorizedAccessException {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_Error_UnauthorizedAccessException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Profile file &apos;{0}.json&apos; was deleted between check and load..
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_FileNotFoundException {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_FileNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to load profile &apos;{0}&apos;. {1}.
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_GeneralException {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_GeneralException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Unable to read profile file. The file may be in use by another process. {0}.
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_IOException {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_IOException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Profile file contains invalid JSON. {0}.
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_JsonException {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_JsonException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to deserialize profile data. The profile format may be incompatible. {0}.
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_JsonSerializationException {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_JsonSerializationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile &apos;{0}&apos; is null, execution will not continue on this profile..
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_NullReferenceException {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_NullReferenceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile &apos;{0}&apos; does not exist..
        /// </summary>
        public static string ProfileManager_ResolveProfileAsync_ProfileDoesNotExistError {
            get {
                return ResourceManager.GetString("ProfileManager_ResolveProfileAsync_ProfileDoesNotExistError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to serialize profile data. {0}.
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_FailedToSerializeProfileError {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_FailedToSerializeProfileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to save profile &apos;{0}&apos;. {1}.
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_GeneralException {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_GeneralException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid profile name. Profile names can&apos;t contain invalid characters. {0}.
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_InvalidProfileNameError {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_InvalidProfileNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Unable to write profile file. The file may be in use by another process. {0}.
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_IOException {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_IOException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The profile name or path is too long for your operating system..
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_PathTooLongError {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_PathTooLongError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile name cannot be parsed correctly..
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_ProfileNameCannotBeParsed1 {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_ProfileNameCannotBeParsed1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile name must be a valid file name, it cannot include spaces or periods, and must contain at least one character of alphanumeric, underscores, or hyphens.
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_ProfileNameCannotBeParsed2 {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_ProfileNameCannotBeParsed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save profile is null, something went wrong..
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_ProfileWasNullError {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_ProfileWasNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: You don&apos;t have permission to save the profile. Try running as administrator..
        /// </summary>
        public static string ProfileManager_SaveProfileAsync_UnauthorizedAccessError {
            get {
                return ResourceManager.GetString("ProfileManager_SaveProfileAsync_UnauthorizedAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Directory &apos;{0}&apos; does not exist. Please create it first..
        /// </summary>
        public static string ProfileManager_TryInitializeProfileDirectoryPath_DirectoryNotFoundError {
            get {
                return ResourceManager.GetString("ProfileManager_TryInitializeProfileDirectoryPath_DirectoryNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: A problem occurred attempting to resolve the profile directory &apos;{0}&apos;.
        /// </summary>
        public static string ProfileManager_TryInitializeProfileDirectoryPath_IOExceptionOccurred {
            get {
                return ResourceManager.GetString("ProfileManager_TryInitializeProfileDirectoryPath_IOExceptionOccurred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Creating the directory &apos;{0}&apos; is not supported..
        /// </summary>
        public static string ProfileManager_TryInitializeProfileDirectoryPath_NotSupportedError {
            get {
                return ResourceManager.GetString("ProfileManager_TryInitializeProfileDirectoryPath_NotSupportedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The profiles directory &apos;{0}&apos; name or path is too long for your operating system..
        /// </summary>
        public static string ProfileManager_TryInitializeProfileDirectoryPath_PathTooLongError {
            get {
                return ResourceManager.GetString("ProfileManager_TryInitializeProfileDirectoryPath_PathTooLongError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: You don&apos;t have permission to create the profiles directory &apos;{0}&apos;. Try running as administrator..
        /// </summary>
        public static string ProfileManager_TryInitializeProfileDirectoryPath_UnauthorizedAccessError {
            get {
                return ResourceManager.GetString("ProfileManager_TryInitializeProfileDirectoryPath_UnauthorizedAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input, please use --help for more details..
        /// </summary>
        public static string Program_RunWithOptionsAsync_InvalidInput {
            get {
                return ResourceManager.GetString("Program_RunWithOptionsAsync_InvalidInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target container must be provided for profile &apos;{0}&apos;..
        /// </summary>
        public static string TargetNullOrEmpty {
            get {
                return ResourceManager.GetString("TargetNullOrEmpty", resourceCulture);
            }
        }
    }
}
